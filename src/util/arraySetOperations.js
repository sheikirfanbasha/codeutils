var x = ["TRANSACTION_ID", "ORIGIN_CUSTOMER_ID", "ORIGIN_ACCOUNT_ID", "TRANSACTION_DATE_TIME", "TRANSACTION_AMOUNT", "TRANSACTION_TYPE", "TRANSACTION_SOURCE", "BENEFICIARY_CUSTOMER_ID_x", "BENEFICIARY_ACCOUNT_ID_x", "CUSTOMER_ID_x", "COUNTRY_x", "CUSTOMER_TYPE_x", "CUSTOMER_RISK_SCORE_x", "ACCOUNT_ID_x", "ACCOUNT_TYPE_x", "ACCOUNT_BALANCE_x", "BENEFICIARY_CUSTOMER_ID_y", "BENEFICIARY_ACCOUNT_ID_y", "CUSTOMER_ID_y", "COUNTRY_y", "CUSTOMER_TYPE_y", "CUSTOMER_RISK_SCORE_y", "ACCOUNT_ID_y", "ACCOUNT_TYPE_y", "ACCOUNT_BALANCE_y", "ORIGIN_COUNTRY_US_IND", "ORIGIN_COUNTRY_NONUS_NONSANCTIONS_IND", "ORIGIN_COUNTRY_SANCTIONS_IND", "ORIGIN_CUSTOMER_INDIVIDUAL_IND", "ORIGIN_CUSTOMER_BUSINESS_IND", "ORIGIN_RISK_SCORE_1_IND", "ORIGIN_RISK_SCORE_2_IND", "ORIGIN_RISK_SCORE_3_IND", "ORIGIN_RISK_SCORE_4_IND", "ORIGIN_RISK_SCORE_5_IND", "BENEFICIARY_COUNTRY_US_IND", "BENEFICIARY_COUNTRY_NONUS_NONSANCTIONS_IND", "BENEFICIARY_COUNTRY_SANCTIONS_IND", "BENEFICIARY_CUSTOMER_INDIVIDUAL_IND", "BENEFICIARY_CUSTOMER_BUSINESS_IND", "BENEFICIARY_RISK_SCORE_1_IND", "BENEFICIARY_RISK_SCORE_2_IND", "BENEFICIARY_RISK_SCORE_3_IND", "BENEFICIARY_RISK_SCORE_4_IND", "BENEFICIARY_RISK_SCORE_5_IND", "ORIGIN_BASIC_CHECKINGS_IND", "ORIGIN_CERTIFICATE_OF_DEPOSIT_IND", "ORIGIN_INTEREST_BEARING_CHECKING", "ORIGIN_MONEY_MARKET_DEPOSIT", "ORIGIN_SAVINGS_ACCOUNT", "BENEFICIARY_BASIC_CHECKINGS_IND", "BENEFICIARY_CERTIFICATE_OF_DEPOSIT_IND", "BENEFICIARY_INTEREST_BEARING_CHECKING", "BENEFICIARY_MONEY_MARKET_DEPOSIT", "BENEFICIARY_SAVINGS_ACCOUNT", "ATM_IND", "CHARGE_IND", "CHECK_IND", "DEPOSIT_IND", "POS_IND", "TRANSFER_IND", "WITHDRAWAL_IND", "ACH_IND", "DEPOSIT SELF_SERVICE_IND", "MERCHANT_LOCATION_IND", "ONLINE_IND", "TELLER_IND", "SELF-SERVICE IND", "WIRE_IND", "WITHDRAWAL SELF-SERVICE IND", "TRANSACTION_AMT_5K_10K_IND", "TRANSACTION_AMT_10K_50K_IND", "TRANSACTION_AMT_50K_100K_IND", "TRANSACTION_AMT_100K_500K_IND", "TRANSACTION_AMT_500K_1M_IND", "TRANSACTION_AMT_GREATER_1M_IND"];
var y = ["TRANSACTION_ID", "ORIGIN_COUNTRY_US_IND", "ORIGIN_COUNTRY_NONUS_NONSANCTIONS_IND", "ORIGIN_COUNTRY_SANCTIONS_IND", "ORIGIN_CUSTOMER_INDIVIDUAL_IND", "ORIGIN_CUSTOMER_BUSINESS_IND", "ORIGIN_RISK_SCORE_1_IND", "ORIGIN_RISK_SCORE_2_IND", "ORIGIN_RISK_SCORE_3_IND", "ORIGIN_RISK_SCORE_4_IND", "ORIGIN_RISK_SCORE_5_IND", "BENEFICIARY_COUNTRY_US_IND", "BENEFICIARY_COUNTRY_NONUS_NONSANCTIONS_IND", "BENEFICIARY_COUNTRY_SANCTIONS_IND", "BENEFICIARY_CUSTOMER_INDIVIDUAL_IND", "BENEFICIARY_CUSTOMER_BUSINESS_IND", "BENEFICIARY_RISK_SCORE_1_IND", "BENEFICIARY_RISK_SCORE_2_IND", "BENEFICIARY_RISK_SCORE_3_IND", "BENEFICIARY_RISK_SCORE_4_IND", "BENEFICIARY_RISK_SCORE_5_IND", "ORIGIN_BASIC_CHECKINGS_IND", "ORIGIN_CERTIFICATE_OF_DEPOSIT_IND", "ORIGIN_INTEREST_BEARING_CHECKING", "ORIGIN_MONEY_MARKET_DEPOSIT", "ORIGIN_SAVINGS_ACCOUNT", "BENEFICIARY_BASIC_CHECKINGS_IND", "BENEFICIARY_CERTIFICATE_OF_DEPOSIT_IND", "BENEFICIARY_INTEREST_BEARING_CHECKING", "BENEFICIARY_MONEY_MARKET_DEPOSIT", "BENEFICIARY_SAVINGS_ACCOUNT", "ATM_IND", "CHARGE_IND", "CHECK_IND", "DEPOSIT_IND", "POS_IND", "TRANSFER_IND", "WITHDRAWAL_IND", "ACH_IND", "DEPOSIT SELF_SERVICE_IND", "MERCHANT_LOCATION_IND", "ONLINE_IND", "TELLER_IND", "SELF-SERVICE IND", "WIRE_IND", "WITHDRAWAL SELF-SERVICE IND", "TRANSACTION_AMT_0_5K_IND", "TRANSACTION_AMT_5K_10K_IND", "TRANSACTION_AMT_10K_50K_IND", "TRANSACTION_AMT_50K_100K_IND", "TRANSACTION_AMT_100K_500K_IND", "TRANSACTION_AMT_500K_1M_IND", "TRANSACTION_AMT_GREATER_1M_IND"];

var diff = [];

//create map with X
var Xmap = {};
x.map(key => {
	Xmap[key] = true;
});

// create map with Y
var Ymap = {};
y.map(key => {
	Ymap[key] = true;
});

console.log(x.length);
console.log(Object.keys(Xmap).length);
console.log(y.length);

// Compute y - x
//for each y check if it exist in map.
//Add all the non existing ones into diff.
y.map(key => {
	if(!Xmap[key]){
		diff.push(key);
	}
});
//print the diff
console.log(diff);


// Compute x - y
diff = [];
x.map(key => {
	if(!Ymap[key]){
		diff.push(key);
	}
});
console.log(diff);

// Compute x intersection y
// decide the shortest array
var common = [];
var tempX = x.length < y.length? Xmap : Ymap;
var tempY = x.length > y.length? Ymap : Xmap;
tempY = Object.keys(tempY);
tempY.map(key => {
	if(tempX[key]){
		common.push(key);
	}
});
console.log(common);


